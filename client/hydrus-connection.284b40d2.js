const e={API_VERSION:"/api_version",SESSION_KEY:"/session_key",REQUEST_NEW_PERMISSIONS:"/request_new_permissions",VERIFY_ACCESS_KEY:"/verify_access_key",ADD_FILE:"/add_files/add_file",CLEAN_TAGS:"/add_tags/clean_tags",GET_TAG_SERVICES:"/add_tags/get_tag_services",ADD_TAGS:"/add_tags/add_tags",GET_URL_FILES:"/add_urls/get_url_files",GET_URL_INFO:"/add_urls/get_url_info",ADD_URL:"/add_urls/add_url",ASSOCIATE_URL:"/add_urls/associate_url",GET_COOKIES:"/manage_cookies/get_cookies",SET_COOKIES:"/manage_cookies/set_cookies",GET_PAGES:"/manage_pages/get_pages",GET_PAGE_INFO:"/manage_pages/get_page_info",FOCUS_PAGE:"/manage_pages/focus_page",SEARCH_FILES:"/get_files/search_files",GET_FILE:"/get_files/file",GET_THUMBNAIL:"/get_files/thumbnail",GET_FILE_METADATA:"/get_files/file_metadata"},t={NOT_IN_DATABASE:0,SUCCESSFUL:1,ALREADY_IN_DATABASE:2,PREVIOUSLY_DELETED:3,FAILED:4,VETOED:7},s={ADD_TO_LOCAL:0,DELETE_FROM_LOCAL:1,PEND_TO_REPOSITORY:2,RESCIND_PEND_FROM_REPOSITORY:3,PETITION_FROM_REPOSITORY:4,RESCIND_A_PETITION_FROM_REPOSITORY:5},a={POST_URL:0,FILE_URL:2,GALLERY_URL:3,WATCHABLE_URL:4,UNKNOWN_URL:5},i={IMPORT_URLS:0,IMPORT_FILES:1,ADD_TAGS:2,SEARCH_FILES:3,MANAGE_PAGES:4,MANAGE_COOKIES:5},_={Current:0,Pending:1,Deleted:2,Petitioned:3},n={"Gallery downloader":1,"Simple downloader":2,"Hard drive import":3,Petitions:5,"File search":6,"URL downloader":7,Duplicates:8,"Thread watcher":9,"Page of pages":10};class r extends Error{constructor(e){super(e),this.name=this.constructor.name}}class o extends Error{constructor(e){super(e),this.name=this.constructor.name}}class l extends Error{constructor(e){super(e),this.name=this.constructor.name}}class d extends Error{constructor(e){super(e),this.name=this.constructor.name}}class c{constructor(e={}){this.address="address"in e?e.address:c.default_api_address,this.access_key="key"in e?e.key:""}static get default_api_address(){return"http://127.0.0.1:45869"}static get ENDPOINTS(){return e}static get FILE_STATUS(){return t}static get TAG_ACTIONS(){return s}static get URL_TYPE(){return a}static get PERMISSIONS(){return i}static get STATUS_NUMBERS(){return _}static get PAGE_TYPES(){return n}async build_call(e,t,s={}){""!==this.access_key&&("headers"in s&&"Hydrus-Client-API-Access-Key"in s.headers||("headers"in s||(s.headers={}),s.headers["Hydrus-Client-API-Access-Key"]=this.access_key));let a=this.address+t;if("queries"in s){a+="?";for(const e in s.queries)if(s.queries.hasOwnProperty(e)){let t=s.queries[e];"object"==typeof t&&(t=JSON.stringify(t)),a+=e+"="+t+"&"}a=a.substr(0,a.length-1)}a=encodeURI(a);let i="parse"in s?s.parse:"json";const _=await fetch(a,{method:e,headers:s.headers,body:"data"in s?s.data:s.json});if(!_.ok)throw new r(_.statusText);switch(i){case"blob":return await _.blob();case"json":default:return await _.json()}}async api_version(){return await this.build_call("GET",e.API_VERSION)}async api_check(){const{version:e}=await this.api_version();if(e>13)throw new d(`You are using an older version of hydrus.js (13) that may not work with the newer api (${e}). Please check if there is an update available!`);if(13>e)throw new d(`This version of hydrus.js (13) is built for a newer version of the api than what your hydrus installation is currently using (${e}). Please update your hydrus.`)}async session_key(){return await this.build_call("GET",e.SESSION_KEY)}async request_new_permissions(t,s){return await this.build_call("GET",e.REQUEST_NEW_PERMISSIONS,{queries:{name:t,basic_permissions:JSON.stringify(s)}})}async verify_access_key(t=""){const s=""!==t?{headers:{"Hydrus-Client-API-Access-Key":t}}:{};return await this.build_call("GET",e.VERIFY_ACCESS_KEY,s)}async add_file(t){return console.warn("add_file is not tested"),await this.build_call("POST",e.ADD_FILE,"path"in t?{json:{path:t.path}}:{headers:{"Content-Type":"application/octet-stream"},data:t.bytes})}async add_tags(t,s){let a={};if(!("service_names_to_tags"in t)&&!("service_names_to_actions_to_tags"in t))throw new o("You must have at least one 'service_names...' argument");if("object"==typeof s?Object.keys(s).length>1?a.hashes=s:a.hash=s[0]:a.hash=s,"service_names_to_tags"in t&&(a.service_names_to_tags=t.service_names_to_tags),"service_names_to_actions_to_tags"in t&&(a.service_names_to_actions_to_tags=t.service_names_to_actions_to_tags),"add_siblings_and_parents"in t){if(typeof t.add_siblings_and_parents!==boolean)throw new l("value of add_siblings_and_parents is of improper type: expects boolean");a.add_siblings_and_parents=t.add_siblings_and_parents}return await this.build_call("POST",e.ADD_TAGS,{json:a})}async clean_tags(t){return await this.build_call("GET",e.CLEAN_TAGS,{queries:{tags:JSON.stringify(t)}})}async get_tag_services(){return await this.build_call("GET",e.GET_TAG_SERVICES)}async get_url_files(t){return await this.build_call("GET",e.GET_URL_FILES,{queries:{url:t}})}async get_url_info(t,s){return await this.build_call("GET",e.GET_URL_INFO,{queries:{url:t}})}async add_url(t){var s={};if(!("url"in t))throw new o("You must have a url argument");if(s.url=t.url,"destination_page_name"in t&&(s.destination_page_name=t.destination_page_name),"destination_page_key"in t&&(s.destination_page_key=t.destination_page_key),"show_destination_page"in t){if("boolean"!=typeof t.show_destination_page)throw new l("value of show_destination_page is of improper type: expects boolean");s.show_destination_page=t.show_destination_page}if("service_names_to_tags"in t){if("object"!=typeof t.service_names_to_tags)throw new l("value of service_names_to_tags is of improper type: expects object");s.service_names_to_tags=t.service_names_to_tags}return await this.build_call("POST",e.ADD_URL,{json:s})}async associate_url(t,s){let a={};if(!("to_add"in t)&&!("to_delete"in t))throw new o("You must have at least one 'to_delete' or 'to_add' argument");return"to_add"in t&&("object"==typeof t.to_add?Object.keys(t.to_add).length>1?a.urls_to_add=t.to_add:a.url_to_add=t.to_add[0]:a.url_to_add=t.to_add),"to_delete"in t&&("object"==typeof t.to_delete?Object.keys(t.to_delete).length>1?a.urls_to_delete=t.to_delete:a.url_to_delete=t.to_delete[0]:a.url_to_delete=t.to_delete),"object"==typeof s?Object.keys(s).length>1?a.hashes=s:a.hash=s[0]:a.hash=s,await this.build_call("POST",e.ASSOCIATE_URL,{json:a})}async search_files(t,s=!1,a=!1){return await this.build_call("GET",e.SEARCH_FILES,{queries:{tags:JSON.stringify(t),system_inbox:s,system_archive:a}})}async get_file_metadata(t){let s={};if("file_ids"in t&&"hashes"in t)throw new l("only one argument is required, choose either file_ids or hashes");if("file_ids"in t){if("object"!=typeof t.file_ids)throw new l("value of file_ids is of improper type: expects list");s.file_ids=JSON.stringify(t.file_ids)}if("hashes"in t){if("object"!=typeof t.hashes)throw new l("value of hashes is of improper type: expects list");s.hashes=JSON.stringify(t.hashes)}return"only_return_identifiers"in t&&(s.only_return_identifiers=t.only_return_identifiers),console.log(s),await this.build_call("GET",e.GET_FILE_METADATA,{queries:s})}async get_file(t){let s={};if("file_id"in t&&"hash"in t)throw new l("only one argument is required, choose either file_id or hash");return"file_id"in t&&(s.file_id=t.file_id),"hash"in t&&(s.hash=t.hash),await this.build_call("GET",e.GET_FILE,{parse:"blob",queries:s})}async get_thumbnail(t){let s={};if("file_id"in t&&"hash"in t)throw new l("only one argument is required, choose either file_id or hash");return"file_id"in t&&(s.file_id=t.file_id),"hash"in t&&(s.hash=t.hash),await this.build_call("GET",e.GET_THUMBNAIL,{parse:"blob",queries:s})}async get_cookies(t){return await this.build_call("GET",e.GET_COOKIES,{queries:{domain:t}})}async set_cookies(t){return await this.build_call("POST",e.SET_COOKIES,{json:t})}async get_pages(){return await this.build_call("GET",e.GET_PAGES)}async get_page_info(t){var s={};if(!("page_key"in t))throw new l("page_key argument required");return s.page_key=t.page_key,"simple"in t&&(s.simple=t.simple),await this.build_call("GET",e.GET_PAGE_INFO,{queries:s})}async focus_page(t){var s={};if(!("page_key"in t))throw new l("page_key argument required");return s.page_key=t.page_key,await this.build_call("POST",e.FOCUS_PAGE,{json:s})}}let u,h=["image/jpg","image/png","image/gif"];function E(e){return h.includes(e)}function g(e,t){const s={address:e||p()};return s.key=t||function(){try{return JSON.parse(localStorage.getItem("access_key"))}catch(e){return}}(),u=new c(s),u}function f(e,t){return u||g(e,t),u.fetch=fetch,u}function p(){try{return JSON.parse(localStorage.getItem("address"))}catch(e){return c.default_api_address}}const S=[c.PERMISSIONS.SEARCH_FILES,c.PERMISSIONS.MANAGE_PAGES];export{f as G,E as I,S as r};
